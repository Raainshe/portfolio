name: Deploy to Digital Ocean

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Debug - Check secrets availability
      run: |
        echo "Checking if required secrets are available..."
        if [ -z "${{ secrets.HOST }}" ]; then
          echo "‚ùå HOST secret is missing"
          exit 1
        else
          echo "‚úÖ HOST secret is available"
        fi
        
        if [ -z "${{ secrets.USERNAME }}" ]; then
          echo "‚ùå USERNAME secret is missing"
          exit 1
        else
          echo "‚úÖ USERNAME secret is available"
        fi
        
        if [ -z "${{ secrets.SSH_KEY }}" ]; then
          echo "‚ùå SSH_KEY secret is missing"
          exit 1
        else
          echo "‚úÖ SSH_KEY secret is available"
        fi
        
        if [ -z "${{ secrets.PORT }}" ]; then
          echo "‚ùå PORT secret is missing"
          exit 1
        else
          echo "‚úÖ PORT secret is available"
        fi
        
        echo "All secrets are available. Proceeding with deployment..."
      
    - name: Test SSH connectivity
      run: |
        echo "Testing SSH connectivity to ${{ secrets.HOST }}:${{ secrets.PORT }}..."
        
        # Create a temporary SSH key file
        echo "${{ secrets.SSH_KEY }}" > /tmp/deploy_key
        chmod 600 /tmp/deploy_key
        
        # Test SSH connection
        timeout 30 ssh -i /tmp/deploy_key -o StrictHostKeyChecking=no -o ConnectTimeout=10 -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} "echo 'SSH connection successful'"
        
        if [ $? -eq 0 ]; then
          echo "‚úÖ SSH connection test passed"
        else
          echo "‚ùå SSH connection test failed"
          echo "This could be due to:"
          echo "1. Firewall blocking connections"
          echo "2. SSH service not running"
          echo "3. Incorrect host/port/credentials"
          echo "4. Network connectivity issues"
          exit 1
        fi
        
        # Clean up
        rm -f /tmp/deploy_key
      
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          echo "Starting deployment process..."
          
          # Check if nginx is running
          if systemctl is-active --quiet nginx; then
            echo "Stopping nginx..."
            systemctl stop nginx
          else
            echo "Nginx is not running, continuing..."
          fi
          
          # Remove old files
          echo "Removing old files..."
          rm -rf /var/www/html/*
          
          # Create a temporary directory for the new files
          echo "Creating temporary directory..."
          mkdir -p /tmp/vue-deploy
          
          echo "Server preparation completed."
          
    - name: Upload files
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        source: "dist/*"
        target: "/tmp/vue-deploy/"
        debug: true
        
    - name: Finalize deployment
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          echo "Finalizing deployment..."
          
          # Check if files were uploaded
          if [ ! "$(ls -A /tmp/vue-deploy)" ]; then
            echo "‚ùå No files found in /tmp/vue-deploy. Upload may have failed."
            exit 1
          fi
          
          # Move files to web directory
          echo "Moving files to web directory..."
          mv /tmp/vue-deploy/* /var/www/html/
          
          # Set proper permissions
          echo "Setting permissions..."
          chown -R www-data:www-data /var/www/html
          chmod -R 755 /var/www/html
          
          # Start nginx
          echo "Starting nginx..."
          systemctl start nginx
          
          # Check if nginx started successfully
          if systemctl is-active --quiet nginx; then
            echo "‚úÖ Nginx started successfully"
          else
            echo "‚ùå Failed to start nginx"
            systemctl status nginx
            exit 1
          fi
          
          # Clean up
          echo "Cleaning up temporary files..."
          rm -rf /tmp/vue-deploy
          
          echo "üéâ Deployment completed successfully!" 